my $cadena = "Brothers\t$x\n"; 
print $cadena;

##################################################

$cadena = 'Brothers\t$x\n'; 
print $cadena;

##################################################

print dump $p;

##################################################

print $p;

##################################################

print $array[3];

##################################################

print dump zip ([0,2,4], [1,3,5]);

##################################################

my $y = [1,3,5];
print dump zip ($x, $y);

##################################################

my ($a, $b) = (10,5);
my $suma = $a + $b;
print "Resultado:" . $suma . "\n";

$suma++;
print "Despues de incrementar: $suma \n";
print $suma += 3;

##################################################

my $cadena = "palabraA\n";
chop($cadena);
print "$cadena ya no tiene salto de fila";

##################################################

print "\U$cadena\E convertida a mayuscula";

##################################################

print "\L$cadena\E convertida a minuscula. ";

##################################################

print $arreglo[0];

##################################################

$arreglo[0] = 5;
print $arreglo[0];

##################################################

print dump(-1 .. 3), "\n";
print dump(-2 .. -2), "\n";

##################################################

print dump(reverse -1 .. 3);

##################################################

print dump (map {$_ / 10} -1 ..3);

##################################################

print dump (grep {$_ > 0} -1 .. 3);

##################################################

print $foo[-1], "\n";
print $foo[-2], "\n";

##################################################

my $arreglo = [[1,2,3], [4, -5, 6], [7,8,9], [10,11,12]];
print dump $arreglo;

##################################################

print $arreglo;

##################################################

print dump $arreglo->[3];

##################################################

print $arreglo ->[3][1];

##################################################

print $arreglo;

##################################################

print dump $arreglo->[3];

##################################################

print $#arreglo, "\n";
print $#{$arreglo[1]}, "\n";

##################################################

my $array = [[[1,2,3],[4,5,6],[7,8,9]],
           [["a", "b", "c"], ["d", "e", "f"],["g", "h", "i"]],
           [[-1,-2,-3],[-4,-5,-6],[-7,-8,-9]] ];
               
print $array->[0][1][2], "\n";
print $array->[2][2][1], "\n";

##################################################

print $stock{peras};

##################################################

$stock{peras} = 5;
print $stock{peras};

##################################################

my $stock = alimenta_hash();
print dump $stock;

##################################################

print $meses->{'Jan'}

##################################################

print $hash{"Canadian Bacon"}->[1];

##################################################

print $hash{"Garlic"}->[1];

##################################################

my $A = 0;
my $B = 1;

print "A y B resulta verdadero\n" if $A and $B; 
print "A o B resulta verdadero\n" if $A or $B; 
print "A xor B resulta verdadero\n" if $A xor $B; 
print "A nand B resulta verdadero\n" if not ($A and $B);

##################################################

print dump (1 .. 5);

##################################################

print '-' x 5;

##################################################

print $A, "\n"; 
$A++; 
print $A, "\n"; 
print $A++, "\n"; 
print $A, "\n";

##################################################

my ($i, $suma) = (0, 0);
while ($i < 10) {
    $suma = $suma + $i++;
}
print "El resultado de la suma es: $suma";

##################################################

# print maximo1(22, 55, 34, 75);

##################################################

print suma(3, 35, 22, 5), "\n";

##################################################

print suma2( 1 .. 8, "xa" ), "\n";

##################################################

print $empleado->nombre();

##################################################

print $empleado->email();

##################################################

print dump $empleado;

##################################################

print dump $empleado2;

##################################################

print dump $empleado2;

##################################################

print "nombre: $empleado2{nombre}\n";
print "email: $empleado2{email}\n";

##################################################

print dump $sueldo;

##################################################

print dump $sueldo;

##################################################

print $sueldo->sueldo();

##################################################

print $sueldo2->sueldo();

##################################################

print dump $sueldo2;

##################################################

